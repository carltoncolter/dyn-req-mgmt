using System;
using System.Diagnostics.CodeAnalysis;
using Microsoft.Xrm.Sdk;

namespace CrmAsyncRequestResponseSample.Plugins
{
    // TODO: Replace with first needed plugin.  Just starter code so there is a testable plugin in the template
    [CrmPluginRegistration(
        MessageNameEnum.Create, "account",
        StageEnum.PreOperation, ExecutionModeEnum.Synchronous,
        "",
        "PreCreate Account", 1, IsolationModeEnum.Sandbox)]
    public class SampleTestablePlugin : IPlugin
    {
        private readonly string _odataEndpoint;
        private readonly bool _hasConfiguration;

        public SampleTestablePlugin(string unsecureConfig, string secureConfig)
        {
            if (secureConfig != String.Empty)
            {
                _odataEndpoint = secureConfig;

                _hasConfiguration = true;
            }
            else
            {
                _hasConfiguration = false;
            }
        }

        [ExcludeFromCodeCoverage]
        public void Execute(IServiceProvider serviceProvider)
        {
            var webClient = WebClientFactory.Create();
            TestableExecute(serviceProvider, webClient);
        }

        public void TestableExecute(IServiceProvider serviceProvider, IWebClient webClient)
        {
            if (_hasConfiguration)
            {
                try
                {
                    var context = (IPluginExecutionContext)serviceProvider.GetService(typeof(IPluginExecutionContext));
                    var odataQuery = $"{_odataEndpoint}/TripPinRESTierService/Airports('KSFO')/Name/$value";
                    webClient.DownloadData(new Uri(odataQuery));
                }
                catch (Exception e)
                {
                    throw new InvalidPluginExecutionException(e.Message);
                }
            }
            else
            {
                throw new InvalidPluginExecutionException("No Secure Configuration");
            }
        }
    }
}